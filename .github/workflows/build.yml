name: jar analyzer build

on:
  workflow_dispatch:

env:
  VERSION: "2.8"

jobs:

  build:
    runs-on: windows-2019
    steps:
      - name: checkout the source
        uses: actions/checkout@v4
        with:
          path: jar-analyzer

      - name: set up java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: restore cygwin installer from cache
        id: cygwin-installer
        uses: actions/cache@v3
        with:
          path: ~/cygwin/setup-x86_64.exe
          key: cygwin-installer

      - name: download cygwin installer
        run: |
          New-Item -Force -ItemType directory -Path "$HOME\cygwin"
          & curl -L "https://www.cygwin.com/setup-x86_64.exe" -o "$HOME/cygwin/setup-x86_64.exe"
        if: steps.cygwin-installer.outputs.cache-hit != 'true'

      - name: restore cygwin packages from cache
        id: cygwin
        uses: actions/cache@v3
        with:
          path: ~/cygwin/packages
          key: cygwin-packages-${{ runner.os }}-v1

      - name: install cygwin
        run: |
          Start-Process -FilePath "$HOME\cygwin\setup-x86_64.exe" -ArgumentList "--quiet-mode --packages zip,unzip --root $HOME\cygwin\cygwin64 --local-package-dir $HOME\cygwin\packages --site http://mirrors.kernel.org/sourceware/cygwin --no-desktop --no-shortcuts --no-startmenu --no-admin" -Wait -NoNewWindow

      - name: download jre
        run: |
            curl -L "https://github.com/jar-analyzer/workflow_jre/releases/download/1.0/jre.zip" -o "jre.zip"
        working-directory: jar-analyzer

      - name: build agent
        run: |
          Remove-Item "lib\agent.jar" -Force
          cd agent
          .\package.bat
        working-directory: jar-analyzer

      - name: build core
        run: |
          .\package.bat
        working-directory: jar-analyzer

      - name: build release
        run: |
          python .\build.py
        working-directory: jar-analyzer

      - name: copy jar
        run: |
          Copy-Item "target\jar-analyzer-${{ env.VERSION }}-jar-with-dependencies.jar" -Destination "release\jar-analyzer-${{ env.VERSION }}.jar"
        working-directory: jar-analyzer

      - name: unpack jre
        run: >
          dir ;
          $env:Path = "$HOME\cygwin\cygwin64\bin;$env:Path" ;
          unzip jre.zip -d release\jar-analyzer-${{ env.VERSION }}-windows-embed\
        working-directory: jar-analyzer

      - name: zip release
        run: >
          dir ;
          $env:Path = "$HOME\cygwin\cygwin64\bin;$env:Path" ;
          zip -r9
          "jar-analyzer-${{ env.VERSION }}-windows-system.zip"
          jar-analyzer-${{ env.VERSION }}-windows-system;
          zip -r9
          "jar-analyzer-${{ env.VERSION }}-windows-embed.zip"
          jar-analyzer-${{ env.VERSION }}-windows-embed;
          zip -r9
          "jar-analyzer-${{ env.VERSION }}-linux.zip"
          jar-analyzer-${{ env.VERSION }}-linux;
        working-directory: jar-analyzer/release

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-analyzer
          path: |
            jar-analyzer/release/jar-analyzer-${{ env.VERSION }}-windows-embed.zip
            jar-analyzer/release/jar-analyzer-${{ env.VERSION }}-windows-system.zip
            jar-analyzer/release/jar-analyzer-${{ env.VERSION }}-linux.zip
            jar-analyzer/release/jar-analyzer-${{ env.VERSION }}.jar
