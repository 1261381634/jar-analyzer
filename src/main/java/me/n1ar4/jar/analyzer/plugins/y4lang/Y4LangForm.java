package me.n1ar4.jar.analyzer.plugins.y4lang;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import me.n1ar4.jar.analyzer.gui.MainForm;
import me.n1ar4.jar.analyzer.starter.Const;
import me.n1ar4.y4lang.core.Core;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

import javax.swing.*;
import java.awt.*;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class Y4LangForm {
    private JPanel masterPanel;
    private JTextArea logArea;
    private JPanel codePanel;
    private JButton clearButton;
    private JButton runButton;
    private JPanel opPanel;
    private JScrollPane consoleScroll;
    private JPanel actionPanel;
    private JLabel y4LangLabel;
    private static RSyntaxTextArea codeArea;
    private static Y4LangForm instance;

    public static void init() {
        codeArea = new RSyntaxTextArea(100, 150);
        codeArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_CPLUSPLUS);
        codeArea.setCodeFoldingEnabled(true);
        RTextScrollPane sp = new RTextScrollPane(codeArea);
        instance.codePanel.add(sp, new GridConstraints());

        codeArea.setText("#include \"base64\"\n" +
                "\n" +
                "def hello(a, b) {\n" +
                "    if a < b {\n" +
                "        data = \"4ra1n\";\n" +
                "\t   enc = base64::encode(data);\n" +
                "\t   print(enc);\n" +
                "    }\n" +
                "}\n" +
                "print(formatTime());\n" +
                "hello(1,2);");
        codeArea.setCaretPosition(0);

        instance.runButton.addActionListener(e -> {
            instance.logArea.setText(null);
            PrintStream printStream = new PrintStream(new TextAreaStream(instance.logArea));
            System.setOut(printStream);
            System.setErr(printStream);
            new Thread(() -> {
                String text = codeArea.getText();
                if (text == null || text.isEmpty()) {
                    JOptionPane.showMessageDialog(instance.masterPanel, "input is null");
                    return;
                }
                Path tmp = Paths.get(Const.tempDir);
                try {
                    Files.createDirectory(tmp);
                } catch (Exception ignored) {
                }
                Path p = tmp.resolve(Paths.get("test.h"));
                try {
                    Files.delete(p);
                } catch (Exception ignored) {
                }
                try {
                    Files.write(p, text.getBytes());
                } catch (Exception ignored) {
                }
                Core.start(new String[]{p.toAbsolutePath().toString()});
                System.setOut(System.out);
                System.setErr(System.err);
            }).start();
        });

        instance.clearButton.addActionListener(e -> {
            codeArea.setText(null);
            instance.logArea.setText(null);
        });
    }

    public static void start() {
        JFrame frame = new JFrame(Const.Y4LangForm);
        frame.setLocationRelativeTo(MainForm.getInstance().getMasterPanel());
        instance = new Y4LangForm();
        init();
        frame.setContentPane(instance.masterPanel);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        masterPanel = new JPanel();
        masterPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        codePanel = new JPanel();
        codePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        masterPanel.add(codePanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(800, 300), new Dimension(800, 300), new Dimension(800, 300), 0, false));
        opPanel = new JPanel();
        opPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        masterPanel.add(opPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        consoleScroll = new JScrollPane();
        opPanel.add(consoleScroll, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(800, 200), new Dimension(800, 200), new Dimension(800, 200), 0, false));
        logArea = new JTextArea();
        logArea.setBackground(new Color(-12895429));
        logArea.setEditable(false);
        logArea.setForeground(new Color(-16711931));
        consoleScroll.setViewportView(logArea);
        actionPanel = new JPanel();
        actionPanel.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        opPanel.add(actionPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        runButton = new JButton();
        runButton.setText("Run");
        actionPanel.add(runButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        clearButton = new JButton();
        clearButton.setText("Clear");
        actionPanel.add(clearButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        y4LangLabel = new JLabel();
        y4LangLabel.setText("Y4 Lang is a script language based on Java");
        actionPanel.add(y4LangLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return masterPanel;
    }

}
